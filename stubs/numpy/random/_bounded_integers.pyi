from __future__ import annotations
import builtins as __builtins__
import numpy as np
__all__: list = list()
__pyx_capi__: dict  # value = {'_rand_uint64': <capsule object "PyObject *(PyObject *, PyObject *, PyObject *, int, int, bitgen_t *, PyObject *)" at 0x0000023083D91080>, '_rand_uint32': <capsule object "PyObject *(PyObject *, PyObject *, PyObject *, int, int, bitgen_t *, PyObject *)" at 0x0000023083D910B0>, '_rand_uint16': <capsule object "PyObject *(PyObject *, PyObject *, PyObject *, int, int, bitgen_t *, PyObject *)" at 0x0000023083D910E0>, '_rand_uint8': <capsule object "PyObject *(PyObject *, PyObject *, PyObject *, int, int, bitgen_t *, PyObject *)" at 0x0000023083D91110>, '_rand_bool': <capsule object "PyObject *(PyObject *, PyObject *, PyObject *, int, int, bitgen_t *, PyObject *)" at 0x0000023083D91140>, '_rand_int64': <capsule object "PyObject *(PyObject *, PyObject *, PyObject *, int, int, bitgen_t *, PyObject *)" at 0x0000023083D91170>, '_rand_int32': <capsule object "PyObject *(PyObject *, PyObject *, PyObject *, int, int, bitgen_t *, PyObject *)" at 0x0000023083D911A0>, '_rand_int16': <capsule object "PyObject *(PyObject *, PyObject *, PyObject *, int, int, bitgen_t *, PyObject *)" at 0x0000023083D911D0>, '_rand_int8': <capsule object "PyObject *(PyObject *, PyObject *, PyObject *, int, int, bitgen_t *, PyObject *)" at 0x0000023083D91200>}
__test__: dict = {}
