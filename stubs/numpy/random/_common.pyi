from __future__ import annotations
import builtins as __builtins__
from collections import namedtuple
from importlib._bootstrap import interface
import numpy as np
import sys as sys
__all__: list = ['interface']
__pyx_capi__: dict  # value = {'POISSON_LAM_MAX': <capsule object "double" at 0x0000023083D5E0A0>, 'LEGACY_POISSON_LAM_MAX': <capsule object "double" at 0x0000023083D5E0D0>, 'MAXSIZE': <capsule object "uint64_t" at 0x0000023083D5E100>, 'benchmark': <capsule object "PyObject *(bitgen_t *, PyObject *, Py_ssize_t, PyObject *)" at 0x0000023083D5E130>, 'random_raw': <capsule object "PyObject *(bitgen_t *, PyObject *, PyObject *, PyObject *)" at 0x0000023083D5E160>, 'prepare_cffi': <capsule object "PyObject *(bitgen_t *)" at 0x0000023083D5E190>, 'prepare_ctypes': <capsule object "PyObject *(bitgen_t *)" at 0x0000023083D5E1C0>, 'check_constraint': <capsule object "int (double, PyObject *, __pyx_t_5numpy_6random_7_common_constraint_type)" at 0x0000023083D5E1F0>, 'check_array_constraint': <capsule object "int (PyArrayObject *, PyObject *, __pyx_t_5numpy_6random_7_common_constraint_type)" at 0x0000023083D5E220>, 'kahan_sum': <capsule object "double (double *, npy_intp)" at 0x0000023083D5E250>, 'double_fill': <capsule object "PyObject *(void *, bitgen_t *, PyObject *, PyObject *, PyObject *)" at 0x0000023083D5E280>, 'float_fill': <capsule object "PyObject *(void *, bitgen_t *, PyObject *, PyObject *, PyObject *)" at 0x0000023083D5E2B0>, 'float_fill_from_double': <capsule object "PyObject *(void *, bitgen_t *, PyObject *, PyObject *, PyObject *)" at 0x0000023083D5E2E0>, 'wrap_int': <capsule object "PyObject *(PyObject *, PyObject *)" at 0x0000023083D5E310>, 'int_to_array': <capsule object "PyArrayObject *(PyObject *, PyObject *, PyObject *, PyObject *)" at 0x0000023083D5E340>, 'validate_output_shape': <capsule object "PyObject *(PyObject *, PyArrayObject *)" at 0x0000023083D5E370>, 'cont': <capsule object "PyObject *(void *, void *, PyObject *, PyObject *, int, PyObject *, PyObject *, __pyx_t_5numpy_6random_7_common_constraint_type, PyObject *, PyObject *, __pyx_t_5numpy_6random_7_common_constraint_type, PyObject *, PyObject *, __pyx_t_5numpy_6random_7_common_constraint_type, PyObject *)" at 0x0000023083D5E3A0>, 'disc': <capsule object "PyObject *(void *, void *, PyObject *, PyObject *, int, int, PyObject *, PyObject *, __pyx_t_5numpy_6random_7_common_constraint_type, PyObject *, PyObject *, __pyx_t_5numpy_6random_7_common_constraint_type, PyObject *, PyObject *, __pyx_t_5numpy_6random_7_common_constraint_type)" at 0x0000023083D5E3D0>, 'cont_f': <capsule object "PyObject *(void *, bitgen_t *, PyObject *, PyObject *, PyObject *, PyObject *, __pyx_t_5numpy_6random_7_common_constraint_type, PyObject *)" at 0x0000023083D5E400>, 'cont_broadcast_3': <capsule object "PyObject *(void *, void *, PyObject *, PyObject *, PyArrayObject *, PyObject *, __pyx_t_5numpy_6random_7_common_constraint_type, PyArrayObject *, PyObject *, __pyx_t_5numpy_6random_7_common_constraint_type, PyArrayObject *, PyObject *, __pyx_t_5numpy_6random_7_common_constraint_type)" at 0x0000023083D5E430>, 'discrete_broadcast_iii': <capsule object "PyObject *(void *, void *, PyObject *, PyObject *, PyArrayObject *, PyObject *, __pyx_t_5numpy_6random_7_common_constraint_type, PyArrayObject *, PyObject *, __pyx_t_5numpy_6random_7_common_constraint_type, PyArrayObject *, PyObject *, __pyx_t_5numpy_6random_7_common_constraint_type)" at 0x0000023083D5E460>}
__test__: dict = {}
